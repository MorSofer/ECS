<TabItem x:Class="ECS.DesignerView"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:vm="clr-namespace:ECS.ViewModel"
         xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
         xmlns:behaviors="clr-namespace:ECS.Behaviors"
         xmlns:converters="clr-namespace:ECS.Converters"
         xmlns:system="clr-namespace:System;assembly=mscorlib"
         Header="Designer"
         mc:Ignorable="d"
         DataContext="{Binding Designer, Source={StaticResource Locator}}"
         d:DesignHeight="300" d:DesignWidth="300"
         x:Name="View">
    <TabItem.Resources>
        <Style TargetType="Control" x:Key="EmptyFocusVisualStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate />
                </Setter.Value>
            </Setter>
        </Style>
        <converters:AndLogicConverter x:Key="AndLogicConverter" />
        <converters:ComponentOffsetConverter x:Key="ComponentOffsetConverter" />
        <system:Double x:Key="NodeOffsetX">10</system:Double>
        <system:Double x:Key="NodeOffsetY">10</system:Double>
    </TabItem.Resources>
    <Grid>
        <Grid.Resources>
            <!-- This CompositeCollection basically Concatenates the Nodes and Connectors in a single one -->
            <CompositeCollection x:Key="Objects">
                <CollectionContainer Collection="{Binding DataContext.Components, Source={x:Reference View}}" />
                <CollectionContainer Collection="{Binding DataContext.Nodes, Source={x:Reference View}}" />
            </CompositeCollection>

            <!-- This is the DataTemplate that will be used to render the Node class -->
            <DataTemplate DataType="{x:Type vm:Node}">
                <Thumb IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                       x:Name="Thumb">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Canvas Margin="-10,-10,10,10">
                                <Ellipse Height="20" Width="20" Stroke="Black" StrokeThickness="4" Fill="Transparent"
                                         x:Name="Ellipse" />
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                    Value="True">
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="CornflowerBlue" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="Blue" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Thumb.Template>
                    <i:Interaction.Behaviors>
                        <behaviors:DragBehavior>
                            <behaviors:DragBehavior.IsEnabled>
                                <MultiBinding Converter="{StaticResource AndLogicConverter}" Mode="OneWay">
                                    <Binding Path="DataContext.AllowDrag" Source="{x:Reference View}" />
                                    <Binding Path="IsSelected"
                                             RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}" />
                                </MultiBinding>
                            </behaviors:DragBehavior.IsEnabled>
                        </behaviors:DragBehavior>
                    </i:Interaction.Behaviors>
                </Thumb>
            </DataTemplate>

            <!-- This is the DataTemplate that will be used to render the Component class -->
            <DataTemplate DataType="{x:Type vm:Component}">
                <Thumb IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                       x:Name="Thumb">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Canvas Margin="-10,-10,10,10">
                                <Canvas.Resources>
                                    <Style TargetType="Line" x:Key="LinkStyle">
                                        <Setter Property="Stroke" Value="Black"/>
                                        <Setter Property="StrokeThickness" Value="3"/>
                                    </Style>
                                </Canvas.Resources>
                                <Ellipse Height="20" Width="20" Stroke="Black" StrokeThickness="4" Fill="Red"
                                         x:Name="Ellipse" />
                                <Line X1="10" Y1="10" x:Name="Line1">
                                    <Line.X2>
                                        <MultiBinding Converter="{StaticResource ComponentOffsetConverter}" Mode="OneWay" ConverterParameter="{StaticResource NodeOffsetX}">
                                            <Binding Path="X"/>
                                            <Binding Path="Node1.X"/>
                                        </MultiBinding>
                                    </Line.X2>
                                    <Line.Y2>
                                        <MultiBinding Converter="{StaticResource ComponentOffsetConverter}" Mode="OneWay" ConverterParameter="{StaticResource NodeOffsetY}">
                                            <Binding Path="Y"/>
                                            <Binding Path="Node1.Y"/>
                                        </MultiBinding>
                                    </Line.Y2>
                                    <Line.Style>
                                        <Style TargetType="Line" BasedOn="{StaticResource LinkStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Node1}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Line.Style>
                                </Line>
                                <Line X1="10" Y1="10" x:Name="Line2">
                                    <Line.X2>
                                        <MultiBinding Converter="{StaticResource ComponentOffsetConverter}" Mode="OneWay" ConverterParameter="{StaticResource NodeOffsetX}">
                                            <Binding Path="X"/>
                                            <Binding Path="Node2.X"/>
                                        </MultiBinding>
                                    </Line.X2>
                                    <Line.Y2>
                                        <MultiBinding Converter="{StaticResource ComponentOffsetConverter}" Mode="OneWay" ConverterParameter="{StaticResource NodeOffsetY}">
                                            <Binding Path="Y"/>
                                            <Binding Path="Node2.Y"/>
                                        </MultiBinding>
                                    </Line.Y2>
                                    <Line.Style>
                                        <Style TargetType="Line" BasedOn="{StaticResource LinkStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Node2}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Line.Style>
                                </Line>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                    Value="True">
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="CornflowerBlue" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Thumb.Template>
                    <i:Interaction.Behaviors>
                        <behaviors:DragBehavior>
                            <behaviors:DragBehavior.IsEnabled>
                                <MultiBinding Converter="{StaticResource AndLogicConverter}" Mode="OneWay">
                                    <Binding Path="DataContext.AllowDrag" Source="{x:Reference View}" />
                                    <Binding Path="IsSelected"
                                             RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}" />
                                </MultiBinding>
                            </behaviors:DragBehavior.IsEnabled>
                        </behaviors:DragBehavior>
                    </i:Interaction.Behaviors>
                </Thumb>
            </DataTemplate>
        </Grid.Resources>
        <ListBox SelectedItem="{Binding SelectedObject}" ItemsSource="{StaticResource Objects}">
            <ListBox.Template>
                <ControlTemplate>
                    <Border>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                <GradientStop Color="White" Offset="0" />
                                <GradientStop Color="GhostWhite" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>

                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                            <Border>
                                <!-- This Border serves as a background and the VisualBrush used to paint its background serves as the "Snapping Grid" -->
                                <!-- The "Snapping" Actually occurs in the Node class (see Node.X and Node.Y properties), it has nothing to do with any UI Elements -->
                                <Border.Background>
                                    <VisualBrush TileMode="Tile"
                                                 Viewport="0,0,50,50" ViewportUnits="Absolute"
                                                 Viewbox="0,0,50,50" ViewboxUnits="Absolute">
                                        <VisualBrush.Visual>
                                            <Rectangle Stroke="DarkGray" StrokeThickness="1" Height="50" Width="50"
                                                       StrokeDashArray="5 3" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.Background>
                                <ItemsPresenter />
                            </Border>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" Background="#01FFFFFF"
                            Height="{Binding AreaHeight}" Width="{Binding AreaWidth}"
                            VerticalAlignment="Top" HorizontalAlignment="Left" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Canvas.Left" Value="{Binding X}" />
                    <Setter Property="Canvas.Top" Value="{Binding Y}" />
                    <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter x:Name="Content" />
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsNew}" Value="True">
                                        <Setter Property="Opacity" Value=".5" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </Grid>
</TabItem>