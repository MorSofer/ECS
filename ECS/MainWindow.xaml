<Window x:Class="ECS.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:ECS.Converters"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:ECS.ViewModel"
        xmlns:layout="clr-namespace:ECS.Layout"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:model="clr-namespace:ECS.Model"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:model1="clr-namespace:ECS.Core.Model;assembly=ECS.Core"
        mc:Ignorable="d"
        x:Name="View"
        DataContext="{Binding DesignerViewModel, Source={StaticResource Locator}}"
        Title="Electronic Circuit Simulation" MinHeight="647" Width="960" MinWidth="647">
    <Window.Resources>
        <converters:ComponentOffsetConverter x:Key="ComponentOffsetConverter" />
        <converters:ClickEventToPointConverter x:Key="ClickEventToPointConv" />
        <system:Double x:Key="NodeOffset">12.0</system:Double>
        <converters:CurrentToBrushConverter x:Key="CurrentToColorConv" MinColor="Green" MidColor="Yellow"
                                            MaxColor="Red" NullColor="Black" MinValue="0" MaxValue="1" />
        <converters:BoolToIndicatorConverter x:Key="BoolToIndicatorConverter" />
        <converters:LinkOffsetConverter x:Key="LinkOffsetConv" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
    </Window.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <!-- Resources for mode selection box -->
            <ObjectDataProvider x:Key="CursorModes" ObjectType="{x:Type system:Enum}" MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="vm:CursorMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <DataTemplate DataType="{x:Type vm:CursorMode}">
                <Border Background="Transparent" Padding="4">
                    <StackPanel Orientation="Horizontal">
                        <Path Fill="Black">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding}" Value="{x:Static vm:CursorMode.ArrangeItems}">
                                            <Setter Property="Data" Value="{StaticResource ArrangeIc}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}" Value="{x:Static vm:CursorMode.ConnectToNode}">
                                            <Setter Property="Data" Value="{StaticResource ConnectIc}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}" Value="{x:Static vm:CursorMode.AddResistor}">
                                            <Setter Property="Data" Value="{StaticResource AddIc}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}"
                                                     Value="{x:Static vm:CursorMode.AddVoltageSource}">
                                            <Setter Property="Data" Value="{StaticResource AddIc}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}" Value="{x:Static vm:CursorMode.AddNode}">
                                            <Setter Property="Data" Value="{StaticResource AddIc}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}" Value="{x:Static vm:CursorMode.AddRefNode}">
                                            <Setter Property="Data" Value="{StaticResource AddIc}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}" Value="{x:Static vm:CursorMode.AddSwitch}">
                                            <Setter Property="Data" Value="{StaticResource AddIc}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                    </StackPanel>
                </Border>
            </DataTemplate>
        </Grid.Resources>
        <!-- Main editing canvas -->
        <Border Grid.Column="1" Margin="2">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="GhostWhite" Offset="1" />
                </LinearGradientBrush>
            </Border.Background>

            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <Border>
                    <!-- This Border serves as a background and the VisualBrush used to paint its background serves as the "Snapping Grid" -->
                    <!-- The "Snapping" Actually occurs in the Node class (see Node.X and Node.Y properties), it has nothing to do with any UI Elements -->
                    <Border.Background>
                        <VisualBrush TileMode="Tile"
                                     Viewport="0,0,50,50" ViewportUnits="Absolute"
                                     Viewbox="0,0,50,50" ViewboxUnits="Absolute">
                            <VisualBrush.Visual>
                                <Rectangle Stroke="DarkGray" StrokeThickness="1" Height="50" Width="50"
                                           StrokeDashArray="5 3" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Border.Background>
                    <layout:DesignerCanvas x:Name="EditBox" Background="#01FFFFFF"
                                           ItemsSource="{Binding DiagramObjects}"
                                           Height="{Binding AreaHeight}" Width="{Binding AreaWidth}"
                                           VerticalAlignment="Top" HorizontalAlignment="Left"
                                           SelectedItem="{Binding SelectedObject, Mode=OneWayToSource}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <command:EventToCommand PassEventArgsToCommand="True" Command="{Binding ClickCommand}"
                                                        EventArgsConverter="{StaticResource ClickEventToPointConv}"
                                                        EventArgsConverterParameter="{Binding ElementName=EditBox}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <layout:DesignerCanvas.Resources>
                            <!-- Common Templates -->
                            <Style TargetType="Shape" x:Key="SelectFillStyle">
                                <Setter Property="Fill" Value="Black" />
                                <Setter Property="Stroke" Value="Black" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type layout:DesignerItem}}}"
                                        Value="True">
                                        <Setter Property="Fill" Value="CornflowerBlue" />
                                        <Setter Property="Stroke" Value="CornflowerBlue" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="Line" x:Key="LinkStyle">
                                <Setter Property="Stroke"
                                        Value="{Binding Current, Converter={StaticResource CurrentToColorConv}, FallbackValue=Black}" />
                                <Setter Property="StrokeThickness" Value="2" />
                                <Setter Property="StrokeStartLineCap" Value="Round" />
                                <Setter Property="StrokeEndLineCap" Value="Round" />
                            </Style>
                            <ControlTemplate TargetType="ContentControl" x:Key="CircuitComponentTemplate">
                                <Canvas x:Name="Host" ClipToBounds="False" 
                                        Height="{Binding Content.Height, ElementName=ComponentIcon}"
                                        Width="{Binding Content.Width, ElementName=ComponentIcon}">
                                    <TextBlock Canvas.Bottom="{Binding Content.Height, ElementName=ComponentIcon}" MinWidth="{Binding Content.Width, ElementName=ComponentIcon}"
                                               TextAlignment="Center" Text="{Binding Name}"/>
                                    <ContentControl x:Name="ComponentIcon" Content="{TemplateBinding ContentControl.Content}" />
                                    <ContentControl Canvas.Top="{Binding Content.Height, ElementName=ComponentIcon}"
                                                    MinWidth="{Binding Content.Width, ElementName=ComponentIcon}" Content="{TemplateBinding Tag}"/>
                                        <Line x:Name="Line1" X1="0" Y1="{Binding Content.Height, ElementName=ComponentIcon, Converter={StaticResource LinkOffsetConv}}">
                                        <Line.X2>
                                            <MultiBinding
                                                Converter="{StaticResource ComponentOffsetConverter}"
                                                ConverterParameter="{StaticResource NodeOffset}" Mode="OneWay">
                                                <Binding Path="X" />
                                                <Binding Path="Node1.X" />
                                            </MultiBinding>
                                        </Line.X2>
                                        <Line.Y2>
                                            <MultiBinding
                                                Converter="{StaticResource ComponentOffsetConverter}"
                                                ConverterParameter="{StaticResource NodeOffset}" Mode="OneWay">
                                                <Binding Path="Y" />
                                                <Binding Path="Node1.Y" />
                                            </MultiBinding>
                                        </Line.Y2>
                                        <Line.Style>
                                            <Style TargetType="Line" BasedOn="{StaticResource LinkStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Node1}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Line.Style>
                                    </Line>
                                    <Line x:Name="Line2" X1="{Binding Content.Width, ElementName=ComponentIcon}" Y1="{Binding Content.Height, ElementName=ComponentIcon, Converter={StaticResource LinkOffsetConv}}">
                                        <Line.X2>
                                            <MultiBinding
                                                Converter="{StaticResource ComponentOffsetConverter}"
                                                ConverterParameter="{StaticResource NodeOffset}" Mode="OneWay">
                                                <Binding Path="X" />
                                                <Binding Path="Node2.X" />
                                            </MultiBinding>
                                        </Line.X2>
                                        <Line.Y2>
                                            <MultiBinding
                                                Converter="{StaticResource ComponentOffsetConverter}"
                                                ConverterParameter="{StaticResource NodeOffset}" Mode="OneWay">
                                                <Binding Path="Y" />
                                                <Binding Path="Node2.Y" />
                                            </MultiBinding>
                                        </Line.Y2>
                                        <Line.Style>
                                            <Style TargetType="Line" BasedOn="{StaticResource LinkStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Node2}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Line.Style>
                                    </Line>
                                </Canvas>
                            </ControlTemplate>
                            <Style x:Key="AlignFix" TargetType="TextBlock">
                                <Setter Property="TextAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="MinWidth" Value="{Binding MinWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}}"/>
                            </Style>

                            <!-- This is the DataTemplate that will be used to render the Node class -->
                            <DataTemplate DataType="{x:Type model:Node}">
                                <Canvas Height="24" Width="24">
                                    <TextBlock Canvas.Bottom="26" MinWidth="24"
                                               TextAlignment="Center" Text="{Binding Name}"/>
                                <ContentControl x:Name="Container">
                                    <Ellipse Height="24" Width="24" StrokeThickness="4"
                                             Fill="Transparent" x:Name="Ellipse">
                                        <Ellipse.Style>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Stroke" Value="Black" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type layout:DesignerItem}}}"
                                                        Value="True">
                                                        <Setter Property="Stroke" Value="CornflowerBlue" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                    <ContentControl.Style>
                                        <Style TargetType="ContentControl">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IsReferenceNode}"
                                                    Value="True">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="ContentControl">
                                                                    <Canvas Width="24" Height="36">
                                                                        <Path x:Name="Icon"
                                                                          StrokeThickness="1"
                                                                          Stroke="Black"
                                                                          StrokeLineJoin="Miter"
                                                                          StrokeStartLineCap="Flat"
                                                                          StrokeEndLineCap="Flat"
                                                                          Data="{StaticResource RefNodeIc}">
                                                                            <Path.RenderTransform>
                                                                                <TransformGroup>
                                                                                    <TranslateTransform X="-4.43708"
                                                                                                    Y="-15.242819" />
                                                                                    <MatrixTransform
                                                                                    Matrix="-1 0 0 1 376 -342.3622" />
                                                                                    <ScaleTransform ScaleX="2"
                                                                                                ScaleY="2.823529" />
                                                                                    <TranslateTransform Y="12" />
                                                                                </TransformGroup>
                                                                            </Path.RenderTransform>
                                                                        </Path>
                                                                    </Canvas>
                                                                    <ControlTemplate.Triggers>
                                                                        <DataTrigger
                                                                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type layout:DesignerItem}}}"
                                                                        Value="True">
                                                                            <Setter TargetName="Icon" Property="Stroke"
                                                                                Value="CornflowerBlue" />
                                                                        </DataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                    </ContentControl>
                                    <TextBlock Canvas.Top="26" MinWidth="24" TextAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsReferenceNode}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                        <TextBlock Text="{Binding Voltage}"/>V
                                    </TextBlock>
                                </Canvas>
                            </DataTemplate>

                            <!-- This is the DataTemplate that will be used to render the Resistor class -->
                            <DataTemplate DataType="{x:Type model:Resistor}">
                                <ContentControl Template="{StaticResource CircuitComponentTemplate}">
                                    <Path Height="24" Width="48" StrokeThickness="0"
                                          Data="{StaticResource ResistorIc}" Style="{StaticResource SelectFillStyle}" />
                                    <ContentControl.Tag>
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource AlignFix}">
                                                <TextBlock Text="{Binding Resistance}"/>Ω
                                            </TextBlock>
                                            <TextBlock Style="{StaticResource AlignFix}">
                                                <TextBlock Text="{Binding Voltage}"/>V
                                            </TextBlock>
                                            <TextBlock Style="{StaticResource AlignFix}">
                                                <TextBlock Text="{Binding Current}"/>A
                                            </TextBlock>
                                        </StackPanel>
                                    </ContentControl.Tag>
                                </ContentControl>
                            </DataTemplate>

                            <!-- This is the DataTemplate that will be used to render the VoltageSource class -->
                            <DataTemplate DataType="{x:Type model:VoltageSource}">
                                <ContentControl Template="{StaticResource CircuitComponentTemplate}">
                                    <Canvas Background="Transparent" Width="48" Height="48">
                                        <Path Data="{StaticResource VoltageSourceIc}" Canvas.Top="-1"
                                              Style="{StaticResource SelectFillStyle}">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="-0.104348" ScaleY="0.104348" />
                                                    <TranslateTransform X="48" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Canvas>
                                    <ContentControl.Tag>
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource AlignFix}">
                                                <TextBlock Text="{Binding Voltage}"/>V
                                            </TextBlock>
                                            <TextBlock Style="{StaticResource AlignFix}">
                                                <TextBlock Text="{Binding Current}"/>A
                                            </TextBlock>
                                        </StackPanel>
                                    </ContentControl.Tag>
                                </ContentControl>
                            </DataTemplate>

                            <!-- This is the DataTemplate that will be used to render the Switch class -->
                            <DataTemplate DataType="{x:Type model:Switch}">
                                <ContentControl Template="{StaticResource CircuitComponentTemplate}">
                                    <Canvas Background="Transparent" Width="48" Height="48">
                                        <Ellipse Height="12" Width="12" Canvas.Top="17" Canvas.Left="-5"
                                                 StrokeThickness="0"
                                                 x:Name="LEllipse" Style="{StaticResource SelectFillStyle}" />
                                        <Ellipse Height="12" Width="12" Canvas.Top="17" Canvas.Left="42"
                                                 StrokeThickness="0"
                                                 x:Name="REllipse" Style="{StaticResource SelectFillStyle}" />
                                        <Line X1="0" Y1="23">
                                            <Line.Style>
                                                <Style TargetType="Line" BasedOn="{StaticResource LinkStyle}">
                                                    <Setter Property="X2" Value="40" />
                                                    <Setter Property="Y2" Value="0" />
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type layout:DesignerItem}}}"
                                                            Value="True">
                                                            <Setter Property="Stroke" Value="CornflowerBlue" />
                                                        </DataTrigger>
                                                        <DataTrigger
                                                            Binding="{Binding IsClosed}"
                                                            Value="False">
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation
                                                                            Storyboard.TargetProperty="Y2"
                                                                            From="23" To="0" Duration="0:0:0.5" />
                                                                        <DoubleAnimation
                                                                            Storyboard.TargetProperty="X2"
                                                                            From="47" To="40" Duration="0:0:0.5" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                            <DataTrigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation
                                                                            Storyboard.TargetProperty="Y2"
                                                                            From="0" To="23" Duration="0:0:0.5" />
                                                                        <DoubleAnimation
                                                                            Storyboard.TargetProperty="X2"
                                                                            From="40" To="47" Duration="0:0:0.5" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.ExitActions>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Line.Style>
                                        </Line>
                                    </Canvas>
                                </ContentControl>
                            </DataTemplate>
                        </layout:DesignerCanvas.Resources>
                    </layout:DesignerCanvas>
                </Border>
            </ScrollViewer>
        </Border>
        <StackPanel Grid.Column="0" Margin="2">
            <!-- Mode selection box -->
            <ListBox SelectedItem="{Binding CursorMode}"
                     ItemsSource="{Binding Source={StaticResource CursorModes}}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="CornflowerBlue" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                             Color="CornflowerBlue" />
                        </Style.Resources>
                        <Setter Property="Margin" Value="2" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="PowderBlue" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <Separator Margin="0,2" />
            <MenuItem Header="Load circuit" HorizontalAlignment="Stretch">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <command:EventToCommand Command="{Binding LoadCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <MenuItem Header="Save circuit as..." HorizontalAlignment="Stretch">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <command:EventToCommand Command="{Binding SaveCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <Separator Margin="0,2" />
            <!--<MenuItem Header="Simulate!" HorizontalAlignment="Stretch">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <command:EventToCommand Command="{Binding SimulateCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>-->
            <GroupBox Header="Simulation options">
                <StackPanel>
                    <CheckBox Content="Time-based simulation" IsChecked="{Binding IsTimeSimEnabled}" Margin="0,2" />
                    <DataGrid Height="100" ItemsSource="{Binding TimeSimValues}" IsEnabled="{Binding IsTimeSimEnabled}"
                              CanUserAddRows="True" CanUserDeleteRows="True" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="" IsReadOnly="True" CanUserResize="False"
                                                CanUserSort="False" CanUserReorder="False"
                                                Binding="{Binding WasProcessed, Converter={StaticResource BoolToIndicatorConverter}}" />
                            <DataGridTextColumn Header="Time" Binding="{Binding Time}" />
                            <DataGridComboBoxColumn Header="Switch" SelectedItemBinding="{Binding Switch}"
                                                    TextBinding="{Binding Switch.Name}">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource"
                                                Value="{Binding DataContext.Switches, RelativeSource={RelativeSource AncestorType=Window}}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource"
                                                Value="{Binding DataContext.Switches, RelativeSource={RelativeSource AncestorType=Window}}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridCheckBoxColumn Header="Closed?" Binding="{Binding IsClosed}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Orientation="Horizontal" Margin="0,2">
                        <TextBlock VerticalAlignment="Center" Text="Max current: " />
                        <xctk:DoubleUpDown VerticalAlignment="Center" Width="60" Value="1.000" Increment="0.001"
                                           Minimum="0" />
                        <CheckBox VerticalAlignment="Center" Margin="4,0,0,0" Content="Alert" />
                    </StackPanel>
                    <CheckBox Content="Save results after simulation" Margin="0,2" />
                </StackPanel>
            </GroupBox>
            <Separator Margin="0,2" />
            <MenuItem Header="Start simulation" HorizontalAlignment="Stretch" FontWeight="Bold">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <command:EventToCommand Command="{Binding SimulateCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <Separator Margin="0,2" />
            <MenuItem Header="Save results" HorizontalAlignment="Stretch" />
            <MenuItem Header="Clear results" HorizontalAlignment="Stretch" />
        </StackPanel>
        <!-- Properties panel -->
        <xctk:PropertyGrid Grid.Column="2" AutoGenerateProperties="False" SelectedObject="{Binding SelectedObject}"
                           Width="200" Margin="2">
            <xctk:PropertyGrid.PropertyDefinitions>
                <xctk:PropertyDefinition TargetProperties="Name" DisplayName="Name" />
                <xctk:PropertyDefinition TargetProperties="Id" DisplayName="ID" />
                <xctk:PropertyDefinition TargetProperties="Resistance" DisplayName="Resistance" />
                <xctk:PropertyDefinition TargetProperties="Voltage" DisplayName="Voltage" />
                <xctk:PropertyDefinition TargetProperties="Current" DisplayName="Current" />
                <xctk:PropertyDefinition TargetProperties="IsClosed" DisplayName="IsClosed" />
                <xctk:PropertyDefinition TargetProperties="Node1" DisplayName="Node1" />
                <xctk:PropertyDefinition TargetProperties="Node2" DisplayName="Node2" />
                <xctk:PropertyDefinition TargetProperties="Rotation" DisplayName="Rotation" />
                <xctk:PropertyDefinition TargetProperties="IsReferenceNode" DisplayName="IsReferenceNode" />
            </xctk:PropertyGrid.PropertyDefinitions>
            <xctk:PropertyGrid.EditorDefinitions>
                <xctk:EditorDefinitionCollection>
                    <xctk:EditorTemplateDefinition TargetProperties="{x:Type model1:INode}">
                        <xctk:EditorTemplateDefinition.EditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding DataContext.Nodes, Source={x:Reference View}}"
                                          SelectedItem="{Binding Value}" DisplayMemberPath="Name" />
                            </DataTemplate>
                        </xctk:EditorTemplateDefinition.EditingTemplate>
                    </xctk:EditorTemplateDefinition>
                </xctk:EditorDefinitionCollection>
            </xctk:PropertyGrid.EditorDefinitions>
        </xctk:PropertyGrid>
        <StatusBar Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1">
            <StatusBarItem Content="READY" Foreground="Green" FontWeight="Bold" />
            <Separator />
            <StatusBarItem Content="00:00:00" FontWeight="Bold" />
            <Separator />
            <StatusBarItem Content="2017-03-27 14:31:16.861 +03:00 [Information] Placeholder for log messages" />
        </StatusBar>
    </Grid>
</Window>